AWSTemplateFormatVersion: '2010-09-09'
Description: 'ECS Task Definition and Listener Rule for Green Deployment'

Parameters:
  ProjectName:
    Type: String
    Default: 'webapp'
    Description: 'Name of the project for resource naming'

  Environment:
    Type: String
    Default: 'prod'
    AllowedValues: ['dev', 'staging', 'prod']
    Description: 'Environment name'

  ContainerImage:
    Type: String
    Description: 'ECR Container Image URI'
    Default: '314146322404.dkr.ecr.eu-central-1.amazonaws.com/webapp-prod-app:latest'

  ContainerPort:
    Type: Number
    Default: 8080
    Description: 'Port on which the container listens'

  DeploymentEnvironment:
    Type: String
    Default: 'green'
    AllowedValues: ['blue', 'green']
    Description: 'Deployment environment (blue or green)'

Conditions:
  IsBlueEnvironment: !Equals [!Ref DeploymentEnvironment, 'blue']
  IsGreenEnvironment: !Equals [!Ref DeploymentEnvironment, 'green']

Resources:
  ECSTaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: !Sub '${ProjectName}-${Environment}-task'
      NetworkMode: awsvpc
      RequiresCompatibilities:
        - FARGATE
      Cpu: '512'
      Memory: '1024'
      ExecutionRoleArn:
        Fn::ImportValue: !Sub '${ProjectName}-${Environment}-ECSTaskExecutionRole-ARN'
      TaskRoleArn:
        Fn::ImportValue: !Sub '${ProjectName}-${Environment}-ECSTaskRole-ARN'
      ContainerDefinitions:
        - Name: !Sub '${ProjectName}-${Environment}-container'
          Image: !Ref ContainerImage
          PortMappings:
            - ContainerPort: !Ref ContainerPort
              Protocol: tcp
          Environment:
            - Name: AWS_REGION
              Value: !Ref AWS::Region
            - Name: S3_BUCKET_NAME
              Value:
                Fn::ImportValue: !Sub '${ProjectName}-${Environment}-ImageBucket-Name'
            - Name: ENVIRONMENT
              Value: !Ref Environment
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group:
                Fn::ImportValue: !Sub '${ProjectName}-${Environment}-ECS-LogGroup-Name'
              awslogs-region: !Ref AWS::Region
              awslogs-stream-prefix: ecs
          Essential: true
          HealthCheck:
            Command:
              - CMD-SHELL
              - curl -f http://localhost:8080/actuator/health || exit 1
            Interval: 30
            Timeout: 5
            Retries: 3
            StartPeriod: 60
      Tags:
        - Key: Name
          Value: !Sub '${ProjectName}-${Environment}-${DeploymentEnvironment}-TaskDefinition'
        - Key: Project
          Value: !Ref ProjectName

#  # Green-specific listener rule for testing
#  GreenListenerRule:
#    Type: AWS::ElasticLoadBalancingV2::ListenerRule
#    Condition: IsGreenEnvironment
#    Properties:
#      ListenerArn:
#        Fn::ImportValue: !Sub '${ProjectName}-${Environment}-ALB-Listener-ARN'
#      Priority: 100
#      Conditions:
#        - Field: path-pattern
#          Values: ['/green*']
#      Actions:
#        - Type: forward
#          TargetGroupArn:
#            Fn::ImportValue: !Sub '${ProjectName}-${Environment}-Green-TG-ARN'

Outputs:
  ECSTaskDefinitionArn:
    Description: 'ECS Task Definition ARN'
    Value: !Ref ECSTaskDefinition
    Export:
      Name: !Sub '${ProjectName}-${Environment}-${DeploymentEnvironment}-TaskDefinition-ARN'