AWSTemplateFormatVersion: "2010-09-09"
Description: "VPC Infrastructure for Highly Available ECS Project. Creates a VPC with 2 Public and 2 Private Subnets across two AZs."

Parameters:
  ProjectName:
    Type: String
    Default: "webapp"
    Description: "A name for the project to be used as a prefix for resources."
  VpcCIDR:
    Type: String
    Default: "10.0.0.0/16"
    Description: "The CIDR block for the VPC."
  PublicSubnet1CIDR:
    Type: String
    Default: "10.0.1.0/24"
    Description: "The CIDR block for Public Subnet in AZ1."
  PublicSubnet2CIDR:
    Type: String
    Default: "10.0.2.0/24"
    Description: "The CIDR block for Public Subnet in AZ2."
  PrivateSubnet1CIDR:
    Type: String
    Default: "10.0.3.0/24"
    Description: "The CIDR block for Private Subnet in AZ1."
  PrivateSubnet2CIDR:
    Type: String
    Default: "10.0.4.0/24"
    Description: "The CIDR block for Private Subnet in AZ2."

Resources:
  # VPC
  VPC:
    Type: "AWS::EC2::VPC"
    Properties:
      CidrBlock: !Ref VpcCIDR
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: !Sub "${ProjectName}-VPC"

  # Internet Gateway
  InternetGateway:
    Type: "AWS::EC2::InternetGateway"
    Properties:
      Tags:
        - Key: Name
          Value: !Sub "${ProjectName}-IGW"

  AttachGateway:
    Type: "AWS::EC2::VPCGatewayAttachment"
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref InternetGateway

  # Subnets
  PublicSubnet1:
    Type: "AWS::EC2::Subnet"
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Ref PublicSubnet1CIDR
      AvailabilityZone: !Select [0, !GetAZs ""]
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: !Sub "${ProjectName}-PublicSubnet-AZ1"

  PublicSubnet2:
    Type: "AWS::EC2::Subnet"
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Ref PublicSubnet2CIDR
      AvailabilityZone: !Select [1, !GetAZs ""]
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: !Sub "${ProjectName}-PublicSubnet-AZ2"

  PrivateSubnet1:
    Type: "AWS::EC2::Subnet"
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Ref PrivateSubnet1CIDR
      AvailabilityZone: !Select [0, !GetAZs ""]
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: !Sub "${ProjectName}-PrivateSubnet-AZ1"

  PrivateSubnet2:
    Type: "AWS::EC2::Subnet"
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Ref PrivateSubnet2CIDR
      AvailabilityZone: !Select [1, !GetAZs ""]
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: !Sub "${ProjectName}-PrivateSubnet-AZ2"

  # NAT Gateway and Elastic IP
  EIPForNatGateway:
    Type: "AWS::EC2::EIP"
    Properties:
      Domain: vpc

  NatGateway:
    Type: "AWS::EC2::NatGateway"
    Properties:
      AllocationId: !GetAtt EIPForNatGateway.AllocationId
      SubnetId: !Ref PublicSubnet1
      Tags:
        - Key: Name
          Value: !Sub "${ProjectName}-NAT-Gateway"

  # Route Tables
  PublicRouteTable:
    Type: "AWS::EC2::RouteTable"
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub "${ProjectName}-Public-RT"

  PrivateRouteTable:
    Type: "AWS::EC2::RouteTable"
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub "${ProjectName}-Private-RT"

  # Routes
  PublicRoute:
    Type: "AWS::EC2::Route"
    DependsOn: AttachGateway
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: "0.0.0.0/0"
      GatewayId: !Ref InternetGateway

  PrivateRoute:
    Type: "AWS::EC2::Route"
    Properties:
      RouteTableId: !Ref PrivateRouteTable
      DestinationCidrBlock: "0.0.0.0/0"
      NatGatewayId: !Ref NatGateway

  # Subnet Route Table Associations
  PublicSubnet1RouteTableAssociation:
    Type: "AWS::EC2::SubnetRouteTableAssociation"
    Properties:
      SubnetId: !Ref PublicSubnet1
      RouteTableId: !Ref PublicRouteTable

  PublicSubnet2RouteTableAssociation:
    Type: "AWS::EC2::SubnetRouteTableAssociation"
    Properties:
      SubnetId: !Ref PublicSubnet2
      RouteTableId: !Ref PublicRouteTable

  PrivateSubnet1RouteTableAssociation:
    Type: "AWS::EC2::SubnetRouteTableAssociation"
    Properties:
      SubnetId: !Ref PrivateSubnet1
      RouteTableId: !Ref PrivateRouteTable

  PrivateSubnet2RouteTableAssociation:
    Type: "AWS::EC2::SubnetRouteTableAssociation"
    Properties:
      SubnetId: !Ref PrivateSubnet2
      RouteTableId: !Ref PrivateRouteTable

Outputs:
  VPCId:
    Description: "The ID of the created VPC"
    Value: !Ref VPC
    Export:
      Name: !Sub "${ProjectName}-VPCId"
  PublicSubnet1Id:
    Description: "ID of the Public Subnet in AZ1"
    Value: !Ref PublicSubnet1
    Export:
      Name: !Sub "${ProjectName}-PublicSubnet1Id"
  PublicSubnet2Id:
    Description: "ID of the Public Subnet in AZ2"
    Value: !Ref PublicSubnet2
    Export:
      Name: !Sub "${ProjectName}-PublicSubnet2Id"
  PrivateSubnet1Id:
    Description: "ID of the Private Subnet in AZ1"
    Value: !Ref PrivateSubnet1
    Export:
      Name: !Sub "${ProjectName}-PrivateSubnet1Id"
  PrivateSubnet2Id:
    Description: "ID of the Private Subnet in AZ2"
    Value: !Ref PrivateSubnet2
    Export:
      Name: !Sub "${ProjectName}-PrivateSubnet2Id"
  PublicSubnets:
    Description: "A list of the Public Subnet IDs"
    Value: !Join [",", [!Ref PublicSubnet1, !Ref PublicSubnet2]]
    Export:
      Name: !Sub "${ProjectName}-PublicSubnets"
  PrivateSubnets:
    Description: "A list of the Private Subnet IDs"
    Value: !Join [",", [!Ref PrivateSubnet1, !Ref PrivateSubnet2]]
    Export:
      Name: !Sub "${ProjectName}-PrivateSubnets"
