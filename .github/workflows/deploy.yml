name: CloudFormation Deployment

on:
  push:
    branches: [ main ]
    paths:
      - '**/*.yaml'  # Trigger on any YAML file changes in the repository
      - '**/*.yml'   # Include both .yaml and .yml extensions
  workflow_dispatch:  # Allow manual triggering

env:
  AWS_REGION: eu-central-1
  PROJECT_NAME: webapp
  ENVIRONMENT: prod
  ARTIFACTS_BUCKET: webapp-prod-codepipeline-artifacts-314146322404-eu-central-1

jobs:
  deploy-infrastructure:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ env.AWS_REGION }}
          role-to-assume: ${{ secrets.AWS_IAM_ROLE_ARN }}

      - name: Deploy VPC Stack
        run: |
          aws cloudformation deploy \
            --template-file /vpc.yaml \
            --stack-name ${{ env.PROJECT_NAME }}-${{ env.ENVIRONMENT }}-vpc \
            --parameter-overrides \
                ProjectName=${{ env.PROJECT_NAME }} \
                Environment=${{ env.ENVIRONMENT }} \
            --capabilities CAPABILITY_IAM CAPABILITY_NAMED_IAM \
            --no-fail-on-empty-changeset
          
          aws cloudformation wait stack-create-complete \
            --stack-name ${{ env.PROJECT_NAME }}-${{ env.ENVIRONMENT }}-vpc

      - name: Deploy Load Balancer Stack
        run: |
          aws cloudformation deploy \
            --template-file /loadbalancer.yaml \
            --stack-name ${{ env.PROJECT_NAME }}-${{ env.ENVIRONMENT }}-loadbalancer \
            --parameter-overrides \
                ProjectName=${{ env.PROJECT_NAME }} \
                Environment=${{ env.ENVIRONMENT }} \
            --capabilities CAPABILITY_IAM CAPABILITY_NAMED_IAM \
            --no-fail-on-empty-changeset

      - name: Deploy ECS Blue Stack
        run: |
          aws cloudformation deploy \
            --template-file /ecs-cluster-blue.yaml \
            --stack-name ${{ env.PROJECT_NAME }}-${{ env.ENVIRONMENT }}-ecs-blue \
            --parameter-overrides \
                ProjectName=${{ env.PROJECT_NAME }} \
                Environment=${{ env.ENVIRONMENT }} \
                DeploymentEnvironment=blue \
            --capabilities CAPABILITY_IAM CAPABILITY_NAMED_IAM \
            --no-fail-on-empty-changeset

      - name: Deploy ECS Green Stack
        run: |
          aws cloudformation deploy \
            --template-file /ecs-cluster-green.yaml \
            --stack-name ${{ env.PROJECT_NAME }}-${{ env.ENVIRONMENT }}-ecs-green \
            --parameter-overrides \
                ProjectName=${{ env.PROJECT_NAME }} \
                Environment=${{ env.ENVIRONMENT }} \
                DeploymentEnvironment=green \
            --capabilities CAPABILITY_IAM CAPABILITY_NAMED_IAM \
            --no-fail-on-empty-changeset

      - name: Deploy Pipeline Stack
        run: |
          aws cloudformation deploy \
            --template-file /codepipeline.yaml \
            --stack-name ${{ env.PROJECT_NAME }}-${{ env.ENVIRONMENT }}-pipeline \
            --parameter-overrides \
                ProjectName=${{ env.PROJECT_NAME }} \
                Environment=${{ env.ENVIRONMENT }} \
                GitHubOwner=your-github-owner \
                GitHubRepo=your-repo-name \
                GitHubBranch=main \
                GitHubTokenSecret=your-github-token-secret-name \
            --capabilities CAPABILITY_IAM CAPABILITY_NAMED_IAM \
            --no-fail-on-empty-changeset